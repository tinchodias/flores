<?xml version="1.0" encoding="UTF-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xsi:schemaLocation="
http://www.springframework.org/schema/beans 
  http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
http://www.springframework.org/schema/tx 
  http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
http://www.springframework.org/schema/aop 
  http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

 <!-- this is the service object that we want to make transactional --> 

 <bean id="fooService" class="transaction.spring.SpringTransactionManager"/>

 <!-- the transactional advice (i.e. what 'happens'; see the <aop:advisor/> bean below) --> 
 <tx:advice id="txAdvice" transaction-manager="txManager"> 
 <!-- the transactional semantics... --> 
   <tx:attributes>
     <tx:method name="*"/>
   </tx:attributes>
 </tx:advice>

 <!-- 
    ensure that the above transactional advice runs for any execution of an 
    operation defined by the FooService interface 
  --> 
 <aop:config> 
  <aop:pointcut id="fooServiceOperation" expression="execution(*.SpringTransactionManager.*(..))"/> 
  <aop:advisor advice-ref="txAdvice" pointcut-ref="fooServiceOperation"/> 
 </aop:config>

 <bean id="txManager" class="org.db4ospring.Db4oTransactionManager">
  <property name="objectContainer" ref="objectContainer"/>
 </bean>

</beans>
